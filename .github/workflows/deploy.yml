name: Deploy Pitchroom

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'public/**'
      - 'vite.config.ts'
      - 'package.json'
      - 'server/**'
      - '.github/workflows/deploy.yml'
      - 'pnpm-lock.yaml'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      S3_BUCKET: ${{ secrets.S3_BUCKET }}
      DIST_DIR: dist
      CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
      EC2_HOST: ${{ secrets.EC2_HOST }}
      EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
      VITE_SERVER_URL: ${{ vars.VITE_SERVER_URL }}
      VITE_LIVEKIT_URL: ${{ vars.VITE_LIVEKIT_URL }}
      VITE_PRIVY_APP_ID: ${{ secrets.VITE_PRIVY_APP_ID }}
      VITE_SENTRY_DSN: ${{ secrets.VITE_SENTRY_DSN }}
      VITE_SUPABASE_URL: ${{ vars.VITE_SUPABASE_URL }}
      VITE_SUPABASE_ANON_KEY: ${{ vars.VITE_SUPABASE_ANON_KEY }}
      VITE_POSTHOG_API_KEY: ${{ secrets.VITE_POSTHOG_API_KEY }}

    steps:
      # --------------------------
      # Checkout source
      # --------------------------
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # --------------------------
      # Set up Node
      # --------------------------
      - name: Set up pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Use Node 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      # --------------------------
      # Install & build front-end
      # --------------------------
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Build front-end
        run: |
          export NODE_OPTIONS=--max-old-space-size=4096
          pnpm run build

      # --------------------------
      # Upload to S3 (static site)
      # --------------------------
      - name: Install AWS CLI
        run: |
          sudo apt-get update && sudo apt-get install -y unzip
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Sync dist → S3
        run: |
          aws s3 sync "${DIST_DIR}" "s3://${S3_BUCKET}" --delete

      # --------------------------
      # (Optional) Invalidate CloudFront cache
      # --------------------------
      - name: Invalidate CloudFront
        if: env.CLOUDFRONT_DISTRIBUTION_ID != ''
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ env.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"

      # --------------------------
      # (Optional) Refresh back-end on EC2
      # --------------------------
      - name: Restart backend service on EC2
        if: env.EC2_HOST != '' && env.EC2_SSH_KEY != ''
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ env.EC2_HOST }}
          username: ec2-user
          key: ${{ env.EC2_SSH_KEY }}
          script: |
            set -e
            cd /opt/pitchroom
            sudo git fetch origin
            sudo git checkout ${{ github.ref_name }}
            sudo git reset --hard origin/${{ github.ref_name }}
            sudo corepack enable && sudo corepack prepare pnpm@latest --activate
            cd server
            sudo pnpm install --no-frozen-lockfile
            cd ..
            sudo systemctl restart pitchroom.service
            
            # Setup Stripe reconciliation with systemd timer (cleaner than cron)
            echo "Setting up Stripe reconciliation systemd timer..."
            sudo cp server/stripe-reconciliation.service /etc/systemd/system/
            sudo cp server/stripe-reconciliation.timer /etc/systemd/system/
            sudo systemctl daemon-reload
            sudo systemctl enable stripe-reconciliation.timer
            sudo systemctl start stripe-reconciliation.timer
            echo "✅ Stripe reconciliation timer configured"
            
            # Show timer status
            sudo systemctl status stripe-reconciliation.timer --no-pager || true 
